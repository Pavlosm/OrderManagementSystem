version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: order-management-api
    ports:
      - "5000:80"
      - "5001:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ConnectionStrings__DefaultConnection=Server=db;Database=OrderManagementDB;User=sa;Password=Your_Strong_Password123!;TrustServerCertificate=True
    depends_on:
      - db
    networks:
      - order-management-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: order-management-db
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Your_Strong_Password123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqldata:/var/opt/mssql
    networks:
      - order-management-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "Your_Strong_Password123!" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  order-management-network:
    name: order-management-network
    driver: bridge

volumes:
  sqldata:
    name: order-management-sqldata 